<p><strong>This is the first post, of a trial blog, written in a programming platform that is brand new to me. 
    Prepare for the clunk.
    </strong>
    </p>
<p>In September of 2016 I started learning how to develop and program web applications. 
    To date, this makes a total of approximately 5 months learning some of the basics of front end and back end design.
    </p>
<h2 class="section-heading">Front end design</h2>
<p>
    I started my journey by trying to build a website from scratch using the ASP.NET Model Controller View (MVC) framework.
    This, in hindsight, was a big mistake. I soon realised that I would need to familiarise myself with the component
    parts of web design before unleashing myself onto a complicated development platform.
</p>
<p>
    I restarted my journey with a book on HTML, CSS and Javascript (Sams Teach Yourself by Julie C. Meloni)
    and ponderously worked through it cover to cover. This taught me about front end design and how content
    was divided between the marked-up content (HTML), the visual style (CSS) and client-side scripts that do clever stuff (Javascript).
</p>
<p>
    With the front end tools I learned in this book, I was able to produce a basic webpage which,
    thankfully, cannot be viewed publically. Although this site was in many ways ugly, having a go
    at building it from scratch gave me a good understanding of the interlinking parts.
</p>
<a href="#">
    <img class="img-responsive" src="~/Images/Orginal_sin.PNG" alt="">
</a>
<span class="caption text-muted">Website design: How not to.</span>
<h2 class="section-heading">Back end design</h2>
<p>
    Having become a master of the front end design part of web development *cough* I turned my
    attention to the second major element I would need to learn before I started down the path of MVC; the C# programming language.
</p>
<p>
    Having programmed a little in C based languages much of the syntax of the C# made sense to me.
    The main difference between C# and other C based programming languages that I used is that C# is
    <em>Object Oriented</em>. This means that language is organised around objects, rather than actions
    (or functions). Such objects represent real world or virtual items whose characteristics are defined by
    fields (also known as  attributes) and thier behaviours (also known as methods).
    <em>Edit: I recently wrote a post on @Html.ActionLink("object oriented programming", "Post", "Home", new { Name = "ObjectOriented", FolderName = "Programming" }, null)</em>.
</p>
<h2 class="section-heading">Putting it all together</h2>
<p>
    In the last few weeks I've been able to put together what
    I have learnt into an Model Controller View web application.
    The website your looking at is the result!
</p>